# Importing libraries
import socket
import sys
import subprocess
from subprocess import call



pwd='Sanktum'
cmd='docker images > docker_images.txt'
cmd2='docker network ls > docker_network.txt'
cmd3 = 'sudo docker inspect nemesida/nwaf-dyn-free > free.txt'
#cmd2 = 'sudo docker ps -a > docker_ps.txt'

#call('echo {} | sudo -S {}'.format(pwd, cmd), shell=True)
#call('echo {} | sudo -S {}'.format(pwd, cmd2), shell=True)
#docker_stats = 'sudo docker stats infinite > docker_stats.txt'


subprocess.run('echo {} | sudo -S {}'.format(pwd, cmd), shell=True)
subprocess.run('echo {} | sudo -S {}'.format(pwd, cmd2), shell=True)
subprocess.run('echo {} | sudo -S {}'.format(pwd, cmd3), shell=True)
##subprocess.run('sudo docker inspect nginx > docker_inspect.txt', shell=True)

#!/usr/bin/env python3
#if (len(sys.argv) > 1):
 #   ServerIp = sys.argv[1]
#else:
   # print("\n\n Run like \n python3 client.py < serverip address > \n\n")
   # exit(1)


# Now we can create socket object
s = socket.socket()

# Lets choose one port and connect to that port
PORT = 9898

# Lets connect to that port where server may be running
s.connect(('192.168.43.223', PORT))

# We can send file sample.txt
#file2 = open("docker_network.txt", "rb")
file = open("docker_images.txt", "rb")
file2 = open("docker_network.txt", "rb")
file3 = open("free.txt", "rb")
#file4 = open("docker_inspect.txt", "rb")
SendData = file.read(1024)
SendData2 = file2.read(1024)
SendData3 = file3.read(8192)
#SendData2 = file2.read(1024)
#SendData3 = file3.read(1024)
#SendData4 = file4.read(1024)


while SendData:
    # Now we can receive data from server
    print("\n\n################## Below message is received from server ################## \n\n ", s.recv(8192).decode("utf-8"))
    #Now send the content of sample.txt to server
    s.send(SendData)
    s.send(SendData2)
    s.send(SendData3)
    #s.send(SendData3)
    #s.send(SendData4)
    SendData = file.read(4096)
    SendData2 = file2.read(4096)
    SendData3 = file3.read(4096)
    #SendData3 = file3.read(1024)
    #SendData4 = file4.read(1024)
# Close the connection from client side

s.close()
